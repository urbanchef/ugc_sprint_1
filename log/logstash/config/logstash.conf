input {
# Данные поступят по UDP
  udp {
    port => "5044"
  }
}
filter {
# Воспользуемся фильтром grok и разобьём строку на несколько полей
    grok {
        # Grok структурирует логи при помощи grok-шаблонов, выглядящих как %{PATTERN:ID}
        # Под капотом каждого паттерна находится регулярное выражение. Это позволяет logstash понять, какие данные он должен найти в сообщении
        # А ID задаёт название этому участку строки
        # Список стандартных паттернов можно найти на github https://github.com/logstash-plugins/logstash-patterns-core/blob/master/patterns/grok-patterns
        # Быстро протестировать корректность вашего паттерна можно в онлайн-отладчике https://grokdebug.herokuapp.com/

        match => { "message" => "%{NUMBER:number1} %{NUMBER:number2} %{NUMBER:number3}" }
  }
}
output {
# Результат выведется в stdout
  stdout {
  }
  elasticsearch {
      hosts => [ "${ES_HOST}" ]
      user => logstash_internal
      password => DBHlW7EilXNEfzT5w9Pg
  }
}

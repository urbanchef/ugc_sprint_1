[tool.poetry]
name = "UGC app"
description = "Yandex.Practicum. Sprint 8."
version = "2022.4.1"
authors = []

[tool.poetry.dependencies]
python = "^3.8"
fastapi = "^0.75.1"
uvicorn = "^0.17.6"
aiokafka = "^0.7.2"
python-jose = "^3.3.0"
gunicorn = "^20.1.0"
aiochclient = "^2.1.0"
orjson = "^3.6.7"
lz4tools = "^1.3.1"
xxhash = "^3.0.0"
accessify = "^0.3.1"


[tool.poetry.dev-dependencies]
black = { version = "*", allow-prereleases = true, extras = ["d"] }
coverage = "*"
flake8 = "*"
isort = "*"
mypy = "*"
pre-commit = "^*"
pylint = "*"
pytest = "*"
pytest-asyncio = "*"
pytest-cov = "*"


[tool.black]
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | venv
  | build
  | dist
)/
'''


[tool.isort]
profile = "black"
multi_line_output = 3


[tool.mypy]
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = true
warn_unreachable = true
pretty = true

[[tool.mypy.overrides]]
module = "*.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true


[tool.pylint.messages_control]
max-line-length = 88
disable = [
    "missing-docstring",
    "too-few-public-methods",
    "too-many-arguments",
]

ignored-modules = ["pydantic", "flask_sqlalchemy"]
good-names = []

[tool.pylint.similarities]
ignore-imports = true
ignore-docstrings = true
ignore-comments = true


[tool.pytest.ini_options]
asyncio_mode = "auto"
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(levelname)-5.5s [%(name)s] %(message)s"


[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
